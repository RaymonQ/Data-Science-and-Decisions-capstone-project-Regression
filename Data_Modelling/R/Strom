---
title: "strombay"
output:
  html_document: default
  pdf_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

```{r}
strom<-read.csv("~/Desktop/StormBay20141017.csv", header = TRUE)
attach(strom)
summary(strom)
```


```{r}
drop_strom <- c("CDOM_quality_control","CNDC_quality_control","CPHL_quality_control"," DEPTH_quality_control", "DOX1_quality_control"," DOX2_quality_control","FID","file_id", "HEAD_quality_control","IRRAD443_quality_control","IRRAD555_quality_control","IRRAD670_quality_control", "LATITUDE_quality_control","LONGITUDE_quality_control","DEPTH_quality_control","DOX2_quality_control","IRRAD490_quality_control","PHASE_quality_control","PROFILE_quality_control","PRES_quality_control","platform_code", "platform_type","PSAL_quality_control","TEMP_quality_control","TIME_quality_control","VBSC_quality_control", "VCUR_GPS_quality_control","deployment_name","time_coverage_start","time_coverage_end","geom")
Strom <- strom[,!(colnames(strom)%in%drop_strom)]
```


```{r}
is_char <- lapply(Strom,typeof)=="character"
numerical_r <- Strom[,!is_char]
categorical_r <- Strom[,is_char]
```


```{r}
library("corrplot")
corrplot(corr = cor(numerical_r))
```


```{r}
sample_size = floor(0.9*nrow(Strom))
set.seed(777)
# randomly split data in r with 90%training and 10% testing 
picked = sample(seq_len(nrow(Strom)),size = sample_size)
train =Strom[picked,]
test =Strom[-picked,]
```


```{r}
library("xts")
library("forecast")
library("tseries")
library("zoo")
library("MASS")
traintx <- xts(train[, -1], order.by=as.Date(train$TIME))
traints<-ts(traintx)
```


```{r}
ndiffs(traints[,"CPHL"])
NewCPHL=diff(traints[,"CPHL"],1)
```


```{r}
plot(NewCPHL)
```

model 1:
```{r}
library("dynlm")
fit.dynlm=dynlm(NewCPHL~LATITUDE+LONGITUDE+PRES+DEPTH+PROFILE+PHASE+TEMP+PSAL+DOX1+DOX2+CDOM+CNDC+VBSC+HEAD+IRRAD443+IRRAD490+IRRAD555+IRRAD670+L(NewCPHL),data=traints)
```


```{r}
summary(fit.dynlm)
par(mfrow = c(1, 2))
plot(fit.dynlm)
```
model 2: better than model 1
```{r}
fit.dynlm2=dynlm(NewCPHL~LATITUDE+PRES+DEPTH+PHASE+TEMP+PSAL+DOX1+DOX2+CDOM+CNDC+VBSC+HEAD+IRRAD443+IRRAD490+IRRAD555+L(NewCPHL),data=traints)
summary(fit.dynlm2)
par(mfrow = c(1, 2))
plot(fit.dynlm2)
```
```{r}
anova(fit.dynlm2,fit.dynlm,test="Chisq")
```
```{r}
plot(traintx[,"CPHL"],col="blue")
```


```{r}
drop_t <- c("TIME")
train_nt<- train[,!(colnames(train)%in%drop_t)]
Strom_nt<-Strom[,!(colnames(Strom)%in%drop_t)]
```


```{r}
plot(strom$CPHL)
```
model 3:r^2 is 0.6336732, better than model 4.
```{r}
model3 <- glm(CPHL~.,data=train_nt)
summary(model3)
par(mfrow = c(1, 2))
plot(model3)
```
```{r}
R.sq3 <- 1-model3$deviance/model3$null.deviance
R.sq3
```
```{r}
car::vif(model3)
```
```{r}
cv.glm(train_nt,model3,K=10)[3]
```

drop profile, model 4: r^2 is 0.6336688. 
```{r}
model4 <- glm(CPHL~LATITUDE+LONGITUDE+ PRES+ DEPTH+ PHASE +TEMP+ PSAL+ DOX1+ DOX2+ CDOM +CNDC+ VBSC+ HEAD +IRRAD443+ IRRAD490+ IRRAD555+ IRRAD670 ,data=train_nt)
summary(model4)
par(mfrow = c(1, 2))
plot(model4)
```


```{r}
R.sq4 <- 1-model4$deviance/model4$null.deviance
R.sq4
```

```{r}
anova(model4,model3,test="Chisq")
```

```{r}
hist(log(strom$CPHL))
hist(strom$CPHL)
```

model 5: r^2 is 0.65. 
```{r}
model5 <- glm(CPHL~LATITUDE+LONGITUDE+PRES+DEPTH+PROFILE+PHASE+TEMP+PSAL+DOX1+DOX2+CDOM+CNDC+VBSC+HEAD+IRRAD443+IRRAD490+IRRAD555+IRRAD670,data=train_nt,family=Gamma(link = "log"))
summary(model5)
par(mfrow = c(1, 2))
plot(model5)
```
```{r}
R.sq5 <- 1-model5$deviance/model5$null.deviance
R.sq5
```
```{r}
car::vif(model5)
```

```{r}
cv.glm(train_nt,model5,K=10)[3]
```


model 6:r^2 is 0.65. better than model 7.
```{r}
model6 <- glm(log(CPHL)~.,data=train_nt)
summary1<-summary(model6)
par(mfrow = c(1, 2))
plot(model6)
```
```{r}
R.sq6 <- 1-model6$deviance/model6$null.deviance
R.sq6
```


```{r}
anova(model6,test="Chisq")
```
```{r}
car::vif(model6)
```

```{r}
cv.glm(train_nt,model6,K=10)[3]
```

drop IRRAD670, model 7: r^2 is 0.65. 
```{r}
model7 <- glm(log(CPHL)~LATITUDE+LONGITUDE+PRES+DEPTH+PROFILE+TEMP+PSAL+CNDC+DOX1+DOX2+CDOM+VBSC+HEAD+IRRAD443+IRRAD490+IRRAD555,data=train_nt)
summary1<-summary(model7)
par(mfrow = c(1, 2))
plot(model7)
```

```{r}
R.sq7 <- 1-model7$deviance/model7$null.deviance
R.sq7
```
```{r}
anova(model6,model7,test="Chisq")
```

Therefore we have three model
one with the guassian log distribution , model3
one with the gamma distribution , model5
one is the guassian disrtribution with log response, model6
We will calculate the MSE and RMSE to judge their performance

model3:
```{r}
#calculate the MSE
par(mfrow = c(1, 2))
#calculate the MSE
#guassian log distribution
plot(density((test$CPHL)),xlim = c(0,2))
plot(density(predict(model3,newdata=test,type="response")))
pre3<-predict(model3, test)
data.frame(RMSE = rmse(pre3, test$CPHL),
            MAE = mae(pre3, test$CPHL))
```

model5:
```{r}
par(mfrow = c(1, 2))
#calculate the MSE
#guassian log distribution
plot(density((test$CPHL)),xlim = c(0,2))
plot(density(predict(model5,newdata=test,type="response")))
pre5<-predict(model5, test)
data.frame(RMSE = rmse(pre5, test$CPHL),
            MAE = mae(pre5, test$CPHL))
```

model6:
```{r}
par(mfrow = c(1, 2))
#calculate the MSE
#guassian log distribution
plot(density((test$CPHL)),xlim = c(0,2))
plot(density(predict(model6,newdata=test,type="response")))
pre6<-predict(model5, test)
data.frame(RMSE = rmse(pre6, test$CPHL),
            MAE = mae(pre6, test$CPHL))
```

Therefore model3 performs the best
```{r}
summary(model3)
R.sq3 <- 1-model3$deviance/model3$null.deviance
R.sq3
```


